package com.example.hiborm;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.NativeQuery;
import org.hibernate.query.Query;

import com.example.hiborm.modal.Employee;
import com.example.hiborm.util.HibernateUtil;


/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
     // to get the session from sessionfactory (It can be multiple session based on multiple services or work)
     		Session session = HibernateUtil.getSessionFactory().openSession();
     		
     		// To create a  transaction ( Transient + Persistent) -- Transient when you do not to reflect and save in backend  but persistent to save into a backend
     	   Transaction tx = session.beginTransaction();
     	   
     	   Employee emp = new Employee( null, "Lalit","lalit@gmail.com"); //transaction	
     	   
     	   session.persist(emp);
     	   
     	   tx.commit();
     	   
     	   //Read the data
     	   Employee eData = session.get(Employee.class, emp.getId());
     	   System.out.println("Retreived the data: "+ eData);
     	   
     	   //Update data
     	   tx= session.beginTransaction();
     	   eData.setEmail("lalit@gmail.com");
     	  System.out.println("Retreived the data: "+ eData);
     	  tx.commit();
     	  
     	  // HQL Query to write to fetch using email // Parameterized Query
     	  Query<Employee> q1 = session.createQuery("from Employee e where e.email = :e", Employee.class);
     	  q1.setParameter("e", "jatin@gmail.com");
     	  System.out.println("Result is: "+q1.uniqueResult());
     	  
     	  //Native SQL
     	  NativeQuery<Employee> empList = session.createNativeQuery("Select * from employee",Employee.class);
     	  
     	  
    }
}
