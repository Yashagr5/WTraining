/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-08-27 19:56:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AdminDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Admin Dashboard</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body { \r\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \r\n");
      out.write("            background: linear-gradient(135deg, #6a11cb, #2575fc); \r\n");
      out.write("            min-height: 100vh; \r\n");
      out.write("            padding: 20px; \r\n");
      out.write("        }\r\n");
      out.write("        .container { \r\n");
      out.write("            max-width: 1200px; \r\n");
      out.write("            margin: 0 auto; \r\n");
      out.write("            background: #ffffff; \r\n");
      out.write("            padding: 30px; \r\n");
      out.write("            border-radius: 14px; \r\n");
      out.write("            box-shadow: 0px 6px 18px rgba(0,0,0,0.2); \r\n");
      out.write("        }\r\n");
      out.write("        h1 { \r\n");
      out.write("            text-align: center; \r\n");
      out.write("            margin-bottom: 30px; \r\n");
      out.write("            color: #444; \r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("        }\r\n");
      out.write("        .dashboard-grid {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        .dashboard-card {\r\n");
      out.write("            background: #f1f5fb;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            border-left: 5px solid #2575fc;\r\n");
      out.write("            transition: transform 0.2s, box-shadow 0.2s;\r\n");
      out.write("        }\r\n");
      out.write("        .dashboard-card:hover {\r\n");
      out.write("            transform: translateY(-5px);\r\n");
      out.write("            box-shadow: 0px 6px 16px rgba(0,0,0,0.15);\r\n");
      out.write("        }\r\n");
      out.write("        .dashboard-card h3 {\r\n");
      out.write("            margin-top: 0;\r\n");
      out.write("            color: #2575fc;\r\n");
      out.write("        }\r\n");
      out.write("        .stats {\r\n");
      out.write("            font-size: 26px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #222;\r\n");
      out.write("        }\r\n");
      out.write("        .nav-menu {\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n");
      out.write("            gap: 15px;\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        .nav-btn {\r\n");
      out.write("            display: block;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            background: #2575fc;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: background 0.3s, transform 0.2s;\r\n");
      out.write("        }\r\n");
      out.write("        .nav-btn:hover {\r\n");
      out.write("            background: #1b5edb;\r\n");
      out.write("            transform: scale(1.03);\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%; \r\n");
      out.write("            border-collapse: collapse; \r\n");
      out.write("            margin-bottom: 20px; \r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("        }\r\n");
      out.write("        th {\r\n");
      out.write("            background: #2575fc; \r\n");
      out.write("            color: white; \r\n");
      out.write("            padding: 12px; \r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("        td {\r\n");
      out.write("            padding: 12px; \r\n");
      out.write("            border-bottom: 1px solid #eaeaea;\r\n");
      out.write("        }\r\n");
      out.write("        tr:hover {\r\n");
      out.write("            background: #f9faff;\r\n");
      out.write("        }\r\n");
      out.write("        h2 {\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("            color: #444;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Admin Dashboard</h1>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Statistics Cards -->\r\n");
      out.write("        <div class=\"dashboard-grid\">\r\n");
      out.write("            <div class=\"dashboard-card\">\r\n");
      out.write("                <h3>Pending Tasks</h3>\r\n");
      out.write("                <div class=\"stats\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pendingTasks != null ? pendingTasks.size() : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"dashboard-card\">\r\n");
      out.write("                <h3>In Progress</h3>\r\n");
      out.write("                <div class=\"stats\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${inProgressTasks != null ? inProgressTasks.size() : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"dashboard-card\">\r\n");
      out.write("                <h3>Completed</h3>\r\n");
      out.write("                <div class=\"stats\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${completedTasks != null ? completedTasks.size() : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"dashboard-card\">\r\n");
      out.write("                <h3>Delayed</h3>\r\n");
      out.write("                <div class=\"stats\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${delayedTasks != null ? delayedTasks.size() : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Navigation Menu -->\r\n");
      out.write("        <div class=\"nav-menu\">\r\n");
      out.write("       	<!--<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/tasks\" class=\"nav-btn\">Manage Tasks</a>\r\n");
      out.write("       		<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/comments\" class=\"nav-btn\">View All Comments</a>\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\" class=\"nav-btn\">Logout</a>  -->\r\n");
      out.write("            <a href=\"TaskComments.jsp\" class=\"nav-btn\">Manage Tasks</a>\r\n");
      out.write("            <a href=\"AdminComments.jsp\" class=\"nav-btn\">View All Comments</a>\r\n");
      out.write("            <a href=\"index.jsp\" class=\"nav-btn\">Logout</a>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Task Status Sections -->\r\n");
      out.write("        <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty pendingTasks}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("            <h2>Pending Tasks</h2>\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Title</th>\r\n");
      out.write("                    <th>Description</th>\r\n");
      out.write("                    <th>Assigned To</th>\r\n");
      out.write("                    <th>Due Date</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <c:forEach var=\"task\" items=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pendingTasks}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${task.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${task.description}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${task.assignedTo.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${task.dueDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </c:forEach>\r\n");
      out.write("            </table>\r\n");
      out.write("        </c:if>\r\n");
      out.write("\r\n");
      out.write("        <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty inProgressTasks}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("            <h2>Tasks In Progress</h2>\r\n");
      out.write("            <table>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Title</th>\r\n");
      out.write("                    <th>Assigned To</th>\r\n");
      out.write("                    <th>Due Date</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <c:forEach var=\"task\" items=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${inProgressTasks}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${task.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${task.assignedTo.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${task.dueDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </c:forEach>\r\n");
      out.write("            </table>\r\n");
      out.write("        </c:if>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
